1.コンパイル


 次のファイルが client/ 内にあることを確認してください。ないときはダウ
 ンロードや圧縮ファイルの解凍を失敗している可能性があるので、作業をや
 り直してください。

	Makefile.in     connection.c    daihinmin.h
	client.c        connection.h    main.c
	configure*      daihinmin.c

 コンソール上で client/ に移動し、次のコマンドを実行するとクライアント
 プログラムがコンパイルされます。
 
	$ ./configure  {Enter}
	$ make {Enter}

  注意:$はコマンドプロンプト、{Enter}はEnterキーを打つ事を意味していま
      すので、$、{Enter}は入力しないでください。

 コンパイルが正常に終了すると、新たに次のファイルが生成されます。
 client（cygwin の場合は client.exe)が実行ファイルです。

	client       client.o     connection.o  daihinmin.o

 エラーがでたときは、コンパイルに失敗しているので、次のことを試してくだ
 さい。

	$ make clean {Enter}
	$ make {Enter}

 ソースファイルを改変した場合は、

	$ make  {Enter}

 と打てばコンパイルがされます。

2.実行

 コンパイルしてできた client あるいは client.exe が実行ファイルです。
 この実行ファイルは次のような形式で実行できます。

	$ ./client [-h server_adress] [-p port] [-n user_name] {Enter}

  -h server_adress : サーバが起動しているコンピュータのIPアドレス(IPv4)を指定します。
                     省略すると 127.0.0.1 が指定されます。

  -p port          : サーバが接続を持ち受けているポート番号を指定します。
                     省略すると 42485 が指定されます。

  -n user_name     : サーバに通知するクライアント名を
		     一時的にそのクライアントのみ変更します。
                     半角英数字のみ使用可能で、15文字まで送信しますが、
                     サーバ側で表示されるのは8字程度になります。
                     恒久的に変更する場合は、 connection.c の DEFAULT_NAME
		     の定義を変更してください。

 たとえば、サーバが同じコンピュータの42485ポートで待ち受けているときに、
 クライアント名と default とする場合、次のように実行します。

	$ ./client -h 127.0.0.1 -p 42485 -n default {Enter}

 これは次の様に省略した場合と同じ設定となります。

	$ ./client {Enter}

 また、下記のように任意のものだけ指定することもできます。
 この例はクライアント名を client01 と指定しています。

	$ ./client -n client01 {Enter}

 クライアントを5つ同時に起動する場合、

	$ ./client & {Enter}
 
 のように最後に&(アンパサント)をつけると、クライアントがバックグラウン
 ドで実行されるので、5つ続けて同時に起動できます。

 注意:クライアントを起動する前に、サーバが起動しておく必要があります。
